---
name: Trigger Functional Tests

on:
  pull_request:
    paths:
      - .github/workflows/functional-tests.yml
      - .github/workflows/trigger-functional-tests.yml
      - .github/REVIEWERS
      - src/**
      - action.yml

defaults:
  run:
    shell: sh

jobs:
  create-pr:
    name: Create PR
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
      - name: Modify files
        run: |
          echo "${{ github.run_id }}" > ci-tests/test1.txt
          echo "${{ github.run_id }}" > ci-tests/test2.txt
      - name: Generate GitHub token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_PR_ACCESS_ID }}
          private-key: ${{ secrets.APP_PR_ACCESS_PRIVATE_KEY }}
      - name: Create PR
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          base: ${{ github.head_ref }}
          title: "[automation] job #${{ github.run_id }}"
          token: ${{ steps.app-token.outputs.token }}
      - name: Print PR info
        run: |
          pr_number="${{ steps.create-pr.outputs.pull-request-number }}"
          pr_url="${{ steps.create-pr.outputs.pull-request-url }}"
          echo "::notice title=PR #${pr_number} is created::${pr_url}"
      - name: Validate PR is closed
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const sleep = (sec) => new Promise(r => setTimeout(r, sec * 1000));
            while (true) {
              const resp = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'closed',
                sort: 'created',
                direction: 'desc',
                per_page: 1,
                page: 1
              });
              core.debug('Response:');
              core.debug(resp);
              const expectedPrId = ${{ steps.create-pr.outputs.pull-request-number }};
              const actualPrId = resp.data[0].id;
              if (expectedPrId !== actualPrId) {
                await sleep(5);
                continue;
              }
              break;
            }
